<%@ jet package="com.hirisun.ide.plugin.pagedesigner.wizard.templates" class="BOTemplate1"
		imports="java.util.List java.io.Serializable 
		com.hirisun.ide.plugin.pagedesigner.gef.model.MOFunctionTableModel 
		com.hirisun.ide.plugin.pagedesigner.utils.TemplateUtils
		com.hirisun.ide.plugin.pagedesigner.gef.model.FunctionColumnModel
		com.hirisun.ide.plugin.pagedesigner.gef.model.TableConnection
		com.hirisun.ide.plugin.pagedesigner.gef.model.TableotoConnection
		com.hirisun.ide.plugin.pagedesigner.gef.model.TableotnConnection
		"%>
<%
MOFunctionTableModel model=(MOFunctionTableModel) ((List) argument).get(0);
String projectName=(String) ((List) argument).get(1);
String modelName=model.getTitle();
String firstUpperModelName=TemplateUtils.toUpperCaseFirstOne(modelName);
String firstLowerModelName=TemplateUtils.toLowerCaseFirstOne(modelName);
%>
package com.hirisun.<%=projectName%>.bo;
import java.io.Serializable;
import java.util.ArrayList;
import java.util.List;

/**
 * <pre>
 * 业务名:
 * 功能说明: 
 * 编写日期:
 * 作者:	HEA IDE
 * 
 * 历史记录
 * 1、修改日期：
 *    修改人：
 *    修改内容：
 * </pre>
 */
public class <%=modelName%>BO implements Serializable {
	
	//生成子BO
	<%for(TableConnection connection:model.getIncomingConnections())
	{
	if(connection instanceof TableotoConnection)
	{%>
	private <%=TemplateUtils.toUpperCaseFirstOne(((MOFunctionTableModel) connection.getSource()).getTitle())%>BO <%=TemplateUtils.toLowerCaseFirstOne(((MOFunctionTableModel)connection.getSource()).getTitle())%>BO;
	<%}%>
    <%else if(connection instanceof TableotnConnection)
    {%>
    private List<<%=((MOFunctionTableModel) connection.getSource()).getTitle()%>BO> list<%=((MOFunctionTableModel) connection.getSource()).getTitle()%>=new ArrayList<<%=((MOFunctionTableModel) connection.getSource()).getTitle()%>BO>();
    <%}
    }%>
	//生成全局变量
	 
    <%for(FunctionColumnModel column:model.getColumns())
    {%>
    private <%=column.getDataType()%> <%=TemplateUtils.toLowerCaseFirstOne(column.getTitle())%>;
    <%}%> 
    //生成get  set函数
    <%for(FunctionColumnModel column:model.getColumns())
    {%>
    public <%=column.getDataType()%> get<%=TemplateUtils.toUpperCaseFirstOne(column.getTitle())%>()
    {
         return this.<%=TemplateUtils.toLowerCaseFirstOne(column.getTitle())%>;
    }
    public void set<%=TemplateUtils.toUpperCaseFirstOne(column.getTitle())%>(<%=column.getDataType()%> <%=TemplateUtils.toLowerCaseFirstOne(column.getTitle())%>)
    {
         this.<%=TemplateUtils.toLowerCaseFirstOne(column.getTitle())%>=<%=TemplateUtils.toLowerCaseFirstOne(column.getTitle())%>;
    }
    <%}%>
    <%for(TableConnection connection:model.getIncomingConnections())
	{
	if(connection instanceof TableotoConnection)
	{%>
	public <%=TemplateUtils.toUpperCaseFirstOne(((MOFunctionTableModel) connection.getSource()).getTitle())%>BO  get<%=TemplateUtils.toUpperCaseFirstOne(((MOFunctionTableModel) connection.getSource()).getTitle())%>BO()
	{
	     return this.<%=TemplateUtils.toLowerCaseFirstOne(((MOFunctionTableModel)connection.getSource()).getTitle())%>BO;
	}
	public void set<%=TemplateUtils.toUpperCaseFirstOne(((MOFunctionTableModel) connection.getSource()).getTitle())%>BO(<%=TemplateUtils.toUpperCaseFirstOne(((MOFunctionTableModel) connection.getSource()).getTitle())%>BO  <%=TemplateUtils.toLowerCaseFirstOne(((MOFunctionTableModel) connection.getSource()).getTitle())%>BO)
	{
	     this.<%=TemplateUtils.toLowerCaseFirstOne(((MOFunctionTableModel)connection.getSource()).getTitle())%>BO=<%=TemplateUtils.toLowerCaseFirstOne(((MOFunctionTableModel)connection.getSource()).getTitle())%>BO;
	}
	<%}
    else if(connection instanceof TableotnConnection)
    {%>
    public List<<%=TemplateUtils.toUpperCaseFirstOne(((MOFunctionTableModel) connection.getSource()).getTitle())%>BO>  getList<%=TemplateUtils.toUpperCaseFirstOne(((MOFunctionTableModel) connection.getSource()).getTitle())%>BO()
	{
	     return this.list<%=TemplateUtils.toUpperCaseFirstOne(((MOFunctionTableModel)connection.getSource()).getTitle())%>;
	}
	public void setList<%=TemplateUtils.toUpperCaseFirstOne(((MOFunctionTableModel) connection.getSource()).getTitle())%>BO(List<<%=TemplateUtils.toUpperCaseFirstOne(((MOFunctionTableModel) connection.getSource()).getTitle())%>BO>  list<%=TemplateUtils.toUpperCaseFirstOne(((MOFunctionTableModel) connection.getSource()).getTitle())%>)
	{
	     this.list<%=TemplateUtils.toUpperCaseFirstOne(((MOFunctionTableModel)connection.getSource()).getTitle())%>=list<%=TemplateUtils.toUpperCaseFirstOne(((MOFunctionTableModel)connection.getSource()).getTitle())%>;
	}
    <%}
    }%>
	
}