package com.hirisun.hea.common.infrastructure.upload.impl;

import java.io.BufferedInputStream;
import java.io.BufferedOutputStream;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import com.hirisun.hea.common.infrastructure.upload.Upload;




/**
 * 
 * <pre>
 * 业务名:文件下传下载接口
 * 功能说明: 
 * 编写日期:	2011-3-31
 * 作者:	袁明敏
 * 
 * 历史记录
 * 1、修改日期：2011-3-31
 *    修改人：袁明敏
 *    修改内容：
 * </pre>
 */
public class Uploader implements Upload{
	/***
	 * 获取文件byte, 保存到HTTP服务器磁盘
	 * @param fileData 文件byte数组
	 * @param path 文件的存储路径
	 * @return 上传成功返回真
	 */
	public  boolean upload(byte[] fileData,String path){
		if (fileData == null)
			return false;

		if (fileData.length == 0)
			return false;

		FileOutputStream fos = null;
		try {
			fos = new FileOutputStream(path);
			fos.write(fileData);
			fos.flush();
			fos.close();
			return true;
		} catch (IOException ioException) {
			ioException.printStackTrace();
			return false;
		} finally {
			if (fos != null) {
				try {
					fos.close();
				} catch (IOException e) {
					e.printStackTrace();
				}
			}
		}
	}
	
	/**
	 * 
	 * 方法说明：实现文件下载功能
	 * 
	 * @param request 请求对象
	 * @param response 响应对象
	 * @param realpath 要下载的文件存储在服务器的上磁盘路径(含文件名)
	 * @param outPutFileName 下载后转出到客户端文件名
	 * @return 下载成功返回真
	 */
	public  boolean downLoad(HttpServletRequest request, HttpServletResponse response,
			String realpath, String outPutFileName) {
		String fileName = null;
		BufferedInputStream bis = null;
		BufferedOutputStream bos = null;
		OutputStream fos = null;
		InputStream fis = null;
		fileName = realpath.substring(realpath.lastIndexOf("/") + 1, realpath.length());
		try {
			response.setContentType(getContentType(fileName));
			response.setHeader("Content-disposition", "attachment;filename="+ new String((outPutFileName + fileName.substring(fileName.lastIndexOf(".")+1)).getBytes(), "iso8859-1"));
			fis = new FileInputStream(realpath);
			bis = new BufferedInputStream(fis);
			fos = response.getOutputStream();
			bos = new BufferedOutputStream(fos);

			int bytesRead = 0;
			byte[] buffer = new byte[10 * 1024];  //最大为10M下载
			while ((bytesRead = bis.read(buffer)) != -1) {
				bos.write(buffer, 0, bytesRead);// 将文件发送到客户端
			}
		} catch (IOException e) {
			response.reset();
			return false;
		} finally {
			try {
				if (bos != null) {
					bos.close();
				}
				if (fos != null) {
					fos.close();
				}
				if (bos != null) {
					bos.close();
				}
				if (fis != null) {
					fis.close();
				}
				if (bis != null) {
					bis.close();
				}
			} catch (IOException e) {
				e.printStackTrace();
			}
		}
		return true;
	}
	
	/**
	 * 
	 * 方法说明：判断内空类型
	 *
	 * @param fileName 文件名
	 * @return 返回类型字符串
	 */
	private static String getContentType(String fileName) {
		String fileNameTmp = fileName.toLowerCase();
		String ret = "";
		if (fileNameTmp.endsWith("txt")) {
			ret = "text/plain";
		}
		if (fileNameTmp.endsWith("gif")) {
			ret = "image/gif";
		}
		if (fileNameTmp.endsWith("jpg")) {
			ret = "image/jpeg";
		}
		if (fileNameTmp.endsWith("jpeg")) {
			ret = "image/jpeg";
		}
		if (fileNameTmp.endsWith("jpe")) {
			ret = "image/jpeg";
		}
		if (fileNameTmp.endsWith("zip")) {
			ret = "application/zip";
		}
		if (fileNameTmp.endsWith("rar")) {
			ret = "application/rar";
		}
		if (fileNameTmp.endsWith("doc")) {
			ret = "application/msword";
		}
		if (fileNameTmp.endsWith("ppt")) {
			ret = "application/vnd.ms-powerpoint";
		}
		if (fileNameTmp.endsWith("xls")) {
			ret = "application/vnd.ms-excel";
		}
		if (fileNameTmp.endsWith("html")) {
			ret = "text/html";
		}
		if (fileNameTmp.endsWith("htm")) {
			ret = "text/html";
		}
		if (fileNameTmp.endsWith("tif")) {
			ret = "image/tiff";
		}
		if (fileNameTmp.endsWith("tiff")) {
			ret = "image/tiff";
		}
		if (fileNameTmp.endsWith("pdf")) {
			ret = "application/pdf";
		}
		return ret;
	}
}
